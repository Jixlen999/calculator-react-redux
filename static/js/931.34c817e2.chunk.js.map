{"version":3,"file":"static/js/931.34c817e2.chunk.js","mappings":"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","sources":["components/Calculator/styles.js","components/ClearButton/ClearButtonFC.jsx","components/ClearButton/styles.js","components/ControlPanel/styles.js","components/Display/styles.js","components/History/styles.js","components/Key/styles.js","components/Keypad/styles.js","constants/KeysConstants.js","components/Display/DisplayFC.jsx","components/Key/KeyFC.jsx","components/Keypad/KeypadFC.jsx","components/Calculator/CalculatorFC.jsx","components/History/HistoryFC.jsx","components/ControlPanel/ControlPanelFC.jsx","pages/HomePage/HomeFC.jsx","pages/HomePage/styles.js","store/actions/CalculatorActions.js","utils/calculationFunc.js","utils/keyClickHandler.js","utils/normalizeFunc.js"],"sourcesContent":["import styled from 'styled-components';\r\nimport theme from '@src/theme';\r\n\r\nconst CalculatorWrapper = styled.div`\r\n  padding-right: ${theme.padding[1]}px;\r\n  height: ${theme.height[6]}%;\r\n  width: ${theme.width[3]}%;\r\n  border-right: ${theme.borderSize}px solid ${theme.borderColor};\r\n`;\r\n\r\nexport default CalculatorWrapper;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DeleteBtn from './styles';\r\n\r\nfunction ClearButtonFC({ clickHandler, dataCy, children, width }) {\r\n  return (\r\n    <DeleteBtn onClick={clickHandler} data-cy={dataCy} width={width}>\r\n      {children}\r\n    </DeleteBtn>\r\n  );\r\n}\r\n\r\nClearButtonFC.propTypes = {\r\n  clickHandler: PropTypes.func.isRequired,\r\n  dataCy: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  width: PropTypes.string,\r\n};\r\nClearButtonFC.defaultProps = {\r\n  width: 'auto',\r\n};\r\n\r\nexport default React.memo(ClearButtonFC);\r\n","import styled from 'styled-components';\r\nimport theme from '@src/theme';\r\n\r\nconst DeleteBtn = styled.div`\r\n  width: ${(props) => (props.width ? props.width : 'auto')};\r\n  height: ${theme.height[2]}px;\r\n  text-align: center;\r\n  font-size: ${theme.fontSize[4]}px;\r\n  border-radius: ${theme.borderRadius[0]}px;\r\n  border: ${theme.borderSize[1]}px solid ${theme.BTN_BORDER};\r\n  cursor: pointer;\r\n  background-color: ${theme.BTN_BG_COLOR};\r\n  &:hover {\r\n    background-color: ${theme.BTN_BG_COLOR_HOVER};\r\n  }\r\n`;\r\n\r\nexport default DeleteBtn;\r\n","import styled from 'styled-components';\r\nimport theme from '@src/theme';\r\n\r\nexport const PanelWrapper = styled.div`\r\n  padding-right: ${theme.padding[1]}px;\r\n  height: ${theme.height[6]}%;\r\n  display: flex;\r\n  align-items: center;\r\n  transition: all ${theme.transition[0]}s ease;\r\n  width: ${(props) => (props.isShown ? '20%' : '2%')};\r\n`;\r\n\r\nexport const HistoryBtn = styled.div`\r\n  margin-left: ${theme.margin[1]}px;\r\n  font-size: ${theme.fontSize[4]}px;\r\n  display: inline-block;\r\n  width: ${theme.fontSize[5]}px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    font-size: ${theme.fontSize[5]}px;\r\n  }\r\n  transition: all ${theme.transition[0]}s ease;\r\n`;\r\n","import styled from 'styled-components';\r\nimport theme from '@src/theme';\r\n\r\nexport const DisplayWrapper = styled.div`\r\n  min-height: ${theme.height[1]}%;\r\n  padding: ${theme.padding[1]}px;\r\n  text-align: right;\r\n  border-bottom: ${theme.borderSize[1]}px solid ${theme.borderColor};\r\n`;\r\nexport const DisplayText = styled.p`\r\n  font-size: ${theme.fontSize[4]}px;\r\n  font-weight: ${theme.fontWeight[1]};\r\n`;\r\nexport const ExpressionText = styled.p`\r\n  font-size: ${theme.fontSize[0]}px;\r\n`;\r\n","import styled from 'styled-components';\r\nimport theme from '@src/theme';\r\n\r\nexport const HistoryWrapper = styled.div`\r\n  width: ${theme.width[3]}%;\r\n  text-align: center;\r\n  visibility: ${(props) => (props.isShown ? 'visible' : 'hidden')};\r\n`;\r\n\r\nexport const Heading = styled.h2`\r\n  font-size: ${theme.fontSize[3]}px;\r\n  margin-bottom: ${theme.margin[1]}%;\r\n`;\r\n\r\nexport const Expression = styled.p`\r\n  font-size: ${theme.fontSize[2]}px;\r\n  margin-bottom: ${theme.margin[0]}%;\r\n`;\r\nexport const ExpressionsWrapper = styled.div`\r\n  height: ${theme.height[3]}vh;\r\n  overflow-y: auto;\r\n  margin-bottom: ${theme.margin[2]}px;\r\n`;\r\n","import styled from 'styled-components';\r\nimport theme from '@src/theme';\r\n\r\nconst KeyWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: ${theme.width[1]}vw;\r\n  height: ${theme.height[0]}vh;\r\n  font-size: ${theme.fontSize[4]}px;\r\n  color: ${theme.MAIN_TEXT_COLOR};\r\n  text-align: center;\r\n  font-weight: ${theme.fontWeight[1]};\r\n  border-radius: ${theme.borderRadius[0]}px;\r\n  border: ${theme.borderSize[1]}px solid ${theme.BTN_BORDER};\r\n  background-color: ${theme.BTN_BG_COLOR};\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: ${theme.BTN_BG_COLOR_HOVER};\r\n  }\r\n`;\r\n\r\nexport default KeyWrapper;\r\n","import styled from 'styled-components';\r\nimport theme from '@src/theme';\r\n\r\nexport const KeypadWrapper = styled.div`\r\n  width: ${theme.width[3]}%;\r\n  height: ${theme.height[4]}%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: ${theme.padding[2]}px ${theme.padding[3]}px 0px ${theme.padding[3]}px;\r\n`;\r\n\r\nexport const Key = styled.div`\r\n  display: flex;\r\n  gap: ${theme.gap[0]}%;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n","const keys1 = ['%', '9', '8', '('];\r\nconst keys2 = ['*', '7', '6', ')'];\r\nconst keys3 = ['/', '5', '4', '±'];\r\nconst keys4 = ['+', '3', '2', '.'];\r\nconst keys5 = ['-', '1', '0', '='];\r\nexport const keys6 = ['C', 'CE'];\r\nexport const keys = [keys1, keys2, keys3, keys4, keys5];\r\n","import React, { useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { DisplayWrapper, DisplayText, ExpressionText } from './styles';\r\n\r\nfunction DisplayFC() {\r\n  const screenValue = useSelector((state) => state.calculator.num);\r\n  const calcResult = useSelector((state) => state.calculator.answer);\r\n  const lastExpression = useSelector((store) => store.history.lastExpression);\r\n  const scrValue = useMemo(() => (screenValue === '' ? 0 : screenValue), [screenValue]);\r\n  return (\r\n    <DisplayWrapper>\r\n      <ExpressionText>\r\n        {/* Если результат еще не подсчитан, или его значение не валидно,\r\n         то последнее выражение над результатом не выводится */}\r\n        {calcResult === '' || calcResult === 'Invalid input' || calcResult === 'Division by zero error'\r\n          ? ''\r\n          : lastExpression}\r\n      </ExpressionText>\r\n      <DisplayText data-cy=\"display\">{calcResult === '' ? scrValue : calcResult}</DisplayText>\r\n    </DisplayWrapper>\r\n  );\r\n}\r\n\r\nexport default React.memo(DisplayFC);\r\n","import React, { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clickHandler from '@utils/keyClickHandler';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport KeyWrapper from './styles';\r\n\r\nfunction KeyFC({ element }) {\r\n  const dispatch = useDispatch();\r\n  const screenValue = useSelector((state) => state.calculator.num);\r\n  const answer = useSelector((state) => state.calculator.answer);\r\n\r\n  const handleClick = useCallback(() => {\r\n    clickHandler(element, dispatch, screenValue, answer);\r\n  }, [element, dispatch, screenValue, answer]);\r\n\r\n  return (\r\n    <KeyWrapper data-cy={`key-${element}`} onClick={handleClick}>\r\n      {element}\r\n    </KeyWrapper>\r\n  );\r\n}\r\n\r\nKeyFC.propTypes = {\r\n  element: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default React.memo(KeyFC);\r\n","import React from 'react';\r\nimport KeyFC from '@components/Key/KeyFC';\r\nimport { keys6, keys } from '@constants/KeysConstants';\r\nimport { KeypadWrapper, Key } from './styles';\r\n\r\nfunction KeypadFC() {\r\n  return (\r\n    <KeypadWrapper>\r\n      {keys.map((element) => (\r\n        <Key key={element}>\r\n          {element.map((key) => (\r\n            <KeyFC key={key} element={key} />\r\n          ))}\r\n        </Key>\r\n      ))}\r\n\r\n      <Key>\r\n        {keys6.map((element) => (\r\n          <KeyFC key={element} element={element} />\r\n        ))}\r\n      </Key>\r\n    </KeypadWrapper>\r\n  );\r\n}\r\n\r\nexport default KeypadFC;\r\n","import React from 'react';\r\nimport DisplayFC from '@components/Display/DisplayFC';\r\nimport KeypadFC from '@components/Keypad/KeypadFC';\r\nimport CalculatorWrapper from './styles';\r\n\r\nfunction CalculatorFC() {\r\n  return (\r\n    <CalculatorWrapper>\r\n      <DisplayFC />\r\n      <KeypadFC />\r\n    </CalculatorWrapper>\r\n  );\r\n}\r\n\r\nexport default CalculatorFC;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { clearHistory } from '@store/actions/CalculatorActions';\r\nimport PropTypes from 'prop-types';\r\nimport ClearButton from '@components/ClearButton/ClearButtonFC';\r\n\r\nimport { HistoryWrapper, Heading, Expression, ExpressionsWrapper } from './styles';\r\n\r\nfunction HistoryFC({ isShown }) {\r\n  const dispatch = useDispatch();\r\n  const clickHandler = () => {\r\n    dispatch(clearHistory());\r\n  };\r\n\r\n  const history = useSelector((store) => store.history.history);\r\n  return (\r\n    <HistoryWrapper isShown={isShown}>\r\n      <Heading>History</Heading>\r\n      <ExpressionsWrapper data-cy=\"history\">\r\n        {history.map((expr, index) => (\r\n          <Expression key={`${expr}_${index}`}>{expr}</Expression>\r\n        ))}\r\n      </ExpressionsWrapper>\r\n      <ClearButton clickHandler={clickHandler} dataCy=\"delete-history\">\r\n        Clear\r\n      </ClearButton>\r\n    </HistoryWrapper>\r\n  );\r\n}\r\n\r\nHistoryFC.propTypes = {\r\n  isShown: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default React.memo(HistoryFC);\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { SlArrowLeft, SlArrowRight } from 'react-icons/sl';\r\nimport HistoryFC from '@components/History/HistoryFC';\r\nimport { PanelWrapper, HistoryBtn } from './styles';\r\n\r\nfunction ControlPanelFC() {\r\n  const [isShown, setIsShown] = useState(false);\r\n  const handleClick = () => {\r\n    localStorage.setItem('isShown', !isShown);\r\n    setIsShown((current) => !current);\r\n  };\r\n  const storageIsShown = localStorage.getItem('isShown');\r\n  const checkLocalStorage = useCallback(() => storageIsShown !== 'false', [storageIsShown]);\r\n  useEffect(() => {\r\n    setIsShown(checkLocalStorage);\r\n  }, [setIsShown, checkLocalStorage]);\r\n\r\n  return (\r\n    <PanelWrapper isShown={isShown}>\r\n      <HistoryBtn onClick={handleClick} data-cy=\"open-history\">\r\n        {isShown ? <SlArrowRight /> : <SlArrowLeft />}\r\n      </HistoryBtn>\r\n      <HistoryFC isShown={isShown} />\r\n    </PanelWrapper>\r\n  );\r\n}\r\n\r\nexport default ControlPanelFC;\r\n","import React from 'react';\r\nimport CalculatorFC from '@components/Calculator/CalculatorFC';\r\nimport ControlPanelFC from '@components/ControlPanel/ControlPanelFC';\r\nimport HomeWrapper from './styles';\r\n\r\nfunction HomeFC() {\r\n  return (\r\n    <HomeWrapper>\r\n      <CalculatorFC />\r\n      <ControlPanelFC />\r\n    </HomeWrapper>\r\n  );\r\n}\r\n\r\nexport default HomeFC;\r\n","import styled from 'styled-components';\r\nimport theme from '@src/theme';\r\n\r\nconst HomeWrapper = styled.div`\r\n  display: flex;\r\n  padding: ${theme.padding[1]}px;\r\n  width: ${theme.width[3]}%;\r\n  height: ${theme.height[6]}%;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport default HomeWrapper;\r\n","import { LOAD_BUTTON, LOAD_ANSWER, LOAD_C, LOAD_CE, ADD_TO_HISTORY, CLEAR_HISTORY } from '@constants/ActionsConstants';\r\n\r\nexport const loadButton = (num) => ({\r\n  type: LOAD_BUTTON,\r\n  payload: num,\r\n});\r\n\r\nexport const loadC = () => ({\r\n  type: LOAD_C,\r\n});\r\n\r\nexport const loadCE = () => ({\r\n  type: LOAD_CE,\r\n});\r\n\r\nexport const loadAnswer = (answer) => ({\r\n  type: LOAD_ANSWER,\r\n  payload: answer,\r\n});\r\n\r\nexport const addToHistory = (lastExpression, expressionWithResult) => ({\r\n  type: ADD_TO_HISTORY,\r\n  lastExpression,\r\n  expressionWithResult,\r\n});\r\n\r\nexport const clearHistory = () => ({\r\n  type: CLEAR_HISTORY,\r\n});\r\n","function add(x, y) {\r\n  return x + y;\r\n}\r\nfunction sub(x, y) {\r\n  return x - y;\r\n}\r\nfunction mul(x, y) {\r\n  return x * y;\r\n}\r\nfunction div(x, y) {\r\n  return x / y;\r\n}\r\nfunction remainder(x, y) {\r\n  return x % y;\r\n}\r\n\r\nconst Command = function (execute, value1, value2) {\r\n  this.execute = execute;\r\n  this.value1 = value1;\r\n  this.value2 = value2;\r\n};\r\nconst AddCommand = function (value1, value2) {\r\n  return new Command(add, value1, value2);\r\n};\r\n\r\nconst SubCommand = function (value1, value2) {\r\n  return new Command(sub, value1, value2);\r\n};\r\n\r\nconst MulCommand = function (value1, value2) {\r\n  return new Command(mul, value1, value2);\r\n};\r\n\r\nconst DivCommand = function (value1, value2) {\r\n  return new Command(div, value1, value2);\r\n};\r\n\r\nconst RemainderCommand = function (value1, value2) {\r\n  return new Command(remainder, value1, value2);\r\n};\r\n\r\nconst Calculator = function () {\r\n  let result = 0;\r\n\r\n  return {\r\n    execute(command) {\r\n      result = command.execute(command.value1, command.value2);\r\n    },\r\n\r\n    getResult() {\r\n      return result;\r\n    },\r\n  };\r\n};\r\n\r\nfunction calculate(op, a, b) {\r\n  const calculator = new Calculator();\r\n  const numA = Number(a);\r\n  const numB = Number(b);\r\n  // a - предпоследнее число\r\n  // b - последнее число\r\n  // поэтому меняем местами, чтобы первое, поделить на второе\r\n  switch (op) {\r\n    case '+':\r\n      calculator.execute(new AddCommand(numA, numB));\r\n      return calculator.getResult();\r\n    case '-':\r\n      calculator.execute(new SubCommand(numB, numA));\r\n      return calculator.getResult();\r\n    case '/':\r\n      calculator.execute(new DivCommand(numB, numA));\r\n      return calculator.getResult();\r\n    case '*':\r\n      calculator.execute(new MulCommand(numA, numB));\r\n      return calculator.getResult();\r\n    case '%':\r\n      calculator.execute(new RemainderCommand(numB, numA));\r\n      return calculator.getResult();\r\n    default:\r\n      return NaN;\r\n  }\r\n}\r\n\r\nfunction checkValidBrackets(str) {\r\n  const stack = [];\r\n  let res = true;\r\n\r\n  const filteredStr = str.filter((el) => el === ')' || el === '(');\r\n\r\n  filteredStr.forEach((el) => {\r\n    if (el === '(') {\r\n      stack.push(el);\r\n    } else {\r\n      if (stack.length > 0) {\r\n        stack.pop();\r\n      } else res = false;\r\n    }\r\n  });\r\n\r\n  return res;\r\n}\r\n\r\nfunction calculateExpression(expr) {\r\n  const nums = [];\r\n  const ops = [];\r\n  const operators = {};\r\n  operators['+'] = 0;\r\n  operators['-'] = 0;\r\n  operators['*'] = 1;\r\n  operators['/'] = 1;\r\n  operators['%'] = 1;\r\n  const brackets = ['(', ')'];\r\n\r\n  try {\r\n    for (let i = 0; i < expr.length; i += 1) {\r\n      // для числа\r\n      if (!(Object.keys(operators).includes(expr[i]) || brackets.includes(expr[i]))) {\r\n        nums.push(expr[i]);\r\n      } else {\r\n        // для не числа\r\n        if (ops.length === 0) {\r\n          ops.push(expr[i]);\r\n        } else {\r\n          if (Object.keys(operators).includes(expr[i])) {\r\n            const prevOp = ops[ops.length - 1];\r\n            if (Object.keys(operators).includes(prevOp)) {\r\n              const prevPrior = operators[prevOp];\r\n              const currOp = expr[i];\r\n              const currPrior = operators[currOp];\r\n              // если приоритет последней опериации ниже или равен приоритету предыдущей операции,\r\n              // то делаем рассчеты для предыдущей оперции и двух последних чисел\r\n              if (prevPrior > currPrior || prevPrior === currPrior) {\r\n                const calculatedVal = calculate(prevOp, nums.pop(), nums.pop());\r\n                nums.push(calculatedVal);\r\n                ops.pop();\r\n                ops.push(currOp);\r\n              } else {\r\n                ops.push(expr[i]);\r\n              }\r\n            } else {\r\n              ops.push(expr[i]);\r\n            }\r\n          } else {\r\n            // подсчеты внутри скобок\r\n            const countOpenBrackets = expr.filter((el) => el === '(').length;\r\n            const countClosedBrackets = expr.filter((el) => el === ')').length;\r\n            if (countOpenBrackets !== countClosedBrackets) {\r\n              return 'Invalid input';\r\n            }\r\n            if (!checkValidBrackets(expr)) {\r\n              return 'Invalid input';\r\n            }\r\n            if (expr[i] === ')') {\r\n              if (expr.indexOf('(') !== -1 && expr.indexOf('(') < i) {\r\n                let j = ops.length - 1;\r\n                while (ops[j] !== '(') {\r\n                  const calculatedVal = calculate(ops[j], nums.pop(), nums.pop());\r\n                  nums.push(calculatedVal);\r\n                  ops.pop();\r\n                  j -= 1;\r\n                }\r\n                ops.pop();\r\n              } else {\r\n                return 'Invalid input';\r\n              }\r\n            } else {\r\n              ops.push(expr[i]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // подсчеты для оставшихся знаков\r\n    for (let k = ops.length - 1; k >= 0; k -= 1) {\r\n      const calculatedVal = calculate(ops[k], nums.pop(), nums.pop());\r\n      nums.push(calculatedVal);\r\n      ops.pop();\r\n    }\r\n    // проверки на валидность ввода, деление на 0\r\n    if (nums[0] === Infinity || nums[0] === -Infinity) {\r\n      return 'Division by zero error';\r\n    }\r\n    if (nums.length === 1 && ops.length === 0 && !Number.isNaN(nums[0]) && Number.isFinite(nums[0])) {\r\n      const digitsAfterComma = nums[0].toString().includes('.') ? nums[0].toString().split('.').pop().length : 0;\r\n      if (digitsAfterComma > 3) {\r\n        return nums[0].toFixed(3);\r\n      }\r\n      return nums[0];\r\n    }\r\n    return 'Invalid input';\r\n  } catch (err) {\r\n    return 'Invalid input';\r\n  }\r\n}\r\n\r\nexport default calculateExpression;\r\n","import { loadButton, loadCE, loadC, loadAnswer, addToHistory } from '@store/actions/CalculatorActions';\r\nimport calculateExpression from './calculationFunc';\r\nimport normalizeExpression from './normalizeFunc';\r\n\r\nconst ceHandler = (answer, screenValue, operatorsAndBrackets, dispatch) => {\r\n  if (answer === '') {\r\n    // Удаление символа для операторов и скобок, чтобы удалились и лишние пробелы\r\n    if (\r\n      screenValue[screenValue.length - 1] === ' ' &&\r\n      !operatorsAndBrackets.includes(screenValue[screenValue.length - 4])\r\n    ) {\r\n      for (let i = 0; i < 3; i += 1) {\r\n        dispatch(loadCE());\r\n      }\r\n    } else if (\r\n      screenValue[screenValue.length - 1] === ' ' &&\r\n      operatorsAndBrackets.includes(screenValue[screenValue.length - 4])\r\n    ) {\r\n      for (let i = 0; i < 2; i += 1) {\r\n        dispatch(loadCE());\r\n      }\r\n    } else {\r\n      // Для всех остальных\r\n      dispatch(loadCE());\r\n    }\r\n  }\r\n};\r\nconst equalHandler = (answer, screenValue, dispatch) => {\r\n  if (answer === '') {\r\n    const result = calculateExpression(normalizeExpression(screenValue));\r\n    dispatch(loadAnswer(result));\r\n    // Если результат не валидный, то он в историю не добавляется\r\n    if (result !== 'Invalid input' && result !== 'Division by zero error') {\r\n      dispatch(addToHistory(`${screenValue} =`, `${screenValue} = ${result}`));\r\n    }\r\n  }\r\n};\r\n\r\nconst operatorsHandler = (operatorsOnly, screenValue, prevAnswer, el, dispatch) => {\r\n  if (\r\n    operatorsOnly.includes(el) &&\r\n    operatorsOnly.includes(screenValue[screenValue.length - 2]) &&\r\n    el !== screenValue[screenValue.length - 2]\r\n  ) {\r\n    dispatch(loadCE());\r\n    dispatch(loadCE());\r\n  } else if (el === screenValue[screenValue.length - 2] && el !== '(' && el !== ')') {\r\n    return;\r\n  }\r\n  if (prevAnswer !== '') {\r\n    if (prevAnswer !== 'Invalid input' && prevAnswer !== 'Division by zero error') {\r\n      dispatch(loadButton(prevAnswer));\r\n    } else {\r\n      dispatch(loadButton(0));\r\n    }\r\n  }\r\n  if (screenValue === '' && el !== '(' && el !== ')') {\r\n    // если еще ничего не было введено, но уже попытались ввести\r\n    // арифм операцию - добавить 0 в качестве первого символа\r\n    dispatch(loadButton(0));\r\n    dispatch(loadButton(` ${el} `));\r\n  } else if (screenValue[screenValue.length - 1] === ' ') {\r\n    dispatch(loadButton(`${el} `));\r\n  } else {\r\n    // каждый знак (если за ним следует число) отделять пробелами\r\n    dispatch(loadButton(` ${el} `));\r\n  }\r\n};\r\n\r\nconst commaHandler = (screenValue, dispatch, prevAnswer, el) => {\r\n  // Обработка на случай, если последний эл-т - оператор, скобка или точка\r\n  if (screenValue[screenValue.length - 2] !== ')' && screenValue[screenValue.length - 1] !== '.') {\r\n    if (screenValue[screenValue.length - 1] === ' ' || screenValue.length === 0) {\r\n      dispatch(loadButton(`0${el}`));\r\n    } else if (prevAnswer) {\r\n      dispatch(loadButton(`0${el}`));\r\n    } else {\r\n      dispatch(loadButton(el));\r\n    }\r\n  }\r\n};\r\n\r\nconst negativePositiveChange = (screenValue, dispatch, prevAnswer) => {\r\n  if (prevAnswer !== '') {\r\n    if (prevAnswer !== 'Invalid input' && prevAnswer !== 'Division by zero error') {\r\n      dispatch(loadButton(prevAnswer));\r\n      screenValue = String(prevAnswer);\r\n      prevAnswer = '';\r\n    }\r\n  }\r\n  const numbers = screenValue.split(' ').filter((el) => !Number.isNaN(+el));\r\n  if (numbers[numbers.length - 1].match(/\\d/) || screenValue[screenValue.length - 1] === ')') {\r\n    const notOperations = [' ', '.', ')', '('];\r\n    let symbols = [];\r\n    let digits = [];\r\n    if (screenValue[screenValue.length - 3] === '(' || screenValue[screenValue.length - 6] === '(') {\r\n      // Если перед эл-м открывается скобка - составляем массив из символов и операторов, начиная с нее\r\n      const bracketIndex = screenValue.lastIndexOf('(');\r\n      screenValue = screenValue.slice(bracketIndex + 2);\r\n      symbols = screenValue.split('').filter((el) => !el.match(/\\d/) && !notOperations.includes(el));\r\n      digits = screenValue.split(' ').filter((el) => el.match(/\\d/));\r\n    } else {\r\n      // В ином случае - составляем из всего выражения\r\n      symbols = screenValue.split('').filter((el) => !el.match(/\\d/) && !notOperations.includes(el));\r\n      digits = screenValue.split(' ').filter((el) => el.match(/\\d/));\r\n    }\r\n    // Обработка для первого числа, введенного в строку (т.е для первого и единственного положительного символа)\r\n    if (symbols.length === 0) {\r\n      const screenVal = screenValue;\r\n      for (let i = 0; i < screenValue.length; i += 1) {\r\n        dispatch(loadCE());\r\n      }\r\n      dispatch(loadButton(`- ${screenVal}`));\r\n      // Для первого и единственного отрицательного\r\n    } else if (symbols.length === 1 && digits.length === 1 && symbols[0] === '-') {\r\n      const allElements = screenValue.split('');\r\n      let screenVal = null;\r\n      if (allElements[1] === ' ') {\r\n        screenVal = screenValue.slice(2);\r\n      } else {\r\n        screenVal = screenValue.slice(1);\r\n      }\r\n      for (let i = 0; i < screenValue.length; i += 1) {\r\n        dispatch(loadCE());\r\n      }\r\n      dispatch(loadButton(`${screenVal}`));\r\n    } else {\r\n      const lastSymb = symbols[symbols.length - 1];\r\n      const indexOfLastSymb = screenValue.lastIndexOf(lastSymb);\r\n      let afterSymb = screenValue.slice(indexOfLastSymb + 1);\r\n      const beforeSymb = screenValue.slice(0, indexOfLastSymb);\r\n      const lengthDiff = screenValue.length - beforeSymb.length;\r\n      if (lastSymb === '+' || lastSymb === '-') {\r\n        if (lastSymb === '+') {\r\n          for (let i = 0; i < lengthDiff; i += 1) {\r\n            dispatch(loadCE());\r\n          }\r\n          dispatch(loadButton(`+ ( -${afterSymb} )`));\r\n        } else {\r\n          if (beforeSymb[beforeSymb.length - 2] === '(') {\r\n            for (let i = 0; i < lengthDiff + 2; i += 1) {\r\n              dispatch(loadCE());\r\n            }\r\n            afterSymb = afterSymb.slice(1, -2);\r\n            dispatch(loadButton(`${afterSymb}`));\r\n          } else {\r\n            for (let i = 0; i < lengthDiff; i += 1) {\r\n              dispatch(loadCE());\r\n            }\r\n            dispatch(loadButton(`- ( -${afterSymb} )`));\r\n          }\r\n        }\r\n      } else {\r\n        // Обработка для случаев, когда послений введенный оператор - не минус, и не плюс в таком случае просто преврщаем el => (- el)\r\n        for (let i = 0; i < lengthDiff; i += 1) {\r\n          dispatch(loadCE());\r\n        }\r\n        dispatch(loadButton(`${lastSymb} ( -${afterSymb} )`));\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst numsAndOpsHandler = (answer, screenValue, operatorsAndBrackets, operatorsOnly, dispatch, el) => {\r\n  const prevAnswer = answer;\r\n  if (prevAnswer !== '') {\r\n    dispatch(loadC());\r\n  }\r\n  if (operatorsAndBrackets.includes(el)) {\r\n    operatorsHandler(operatorsOnly, screenValue, prevAnswer, el, dispatch);\r\n  } else {\r\n    if (el === '±') {\r\n      negativePositiveChange(screenValue, dispatch, prevAnswer);\r\n    } else if (el === '.') {\r\n      commaHandler(screenValue, dispatch, prevAnswer, el);\r\n    } else {\r\n      // Для цифр\r\n      dispatch(loadButton(el));\r\n    }\r\n  }\r\n};\r\n\r\nfunction clickHandler(el, dispatch, screenValue, answer) {\r\n  const operatorsAndBrackets = ['+', '-', '/', '*', '(', ')', '%'];\r\n  const operatorsOnly = ['+', '-', '/', '*', '%'];\r\n  if (el === 'CE') {\r\n    ceHandler(answer, screenValue, operatorsAndBrackets, dispatch);\r\n  } else if (el === 'C') {\r\n    dispatch(loadC());\r\n  } else if (el === '=') {\r\n    equalHandler(answer, screenValue, dispatch);\r\n  } else {\r\n    numsAndOpsHandler(answer, screenValue, operatorsAndBrackets, operatorsOnly, dispatch, el);\r\n  }\r\n}\r\n\r\nexport default clickHandler;\r\n","export default function normalizeExpression(expr) {\r\n  // функция для совмещения числа с минусом, идущим перед ним\r\n  let trimmedExpr = expr.trim();\r\n  trimmedExpr = trimmedExpr.split(' ');\r\n  const normExpr = [];\r\n  for (let i = 0; i < trimmedExpr.length; i += 1) {\r\n    if (\r\n      trimmedExpr[i] === '-' &&\r\n      (Number.isNaN(+trimmedExpr[i - 1]) || i === 0) &&\r\n      !Number.isNaN(+trimmedExpr[i + 1])\r\n    ) {\r\n      console.log(`trim: ${trimmedExpr}`);\r\n      i += 1;\r\n      normExpr.push(`-${trimmedExpr[i]}`);\r\n      console.log(normExpr);\r\n    } else {\r\n      normExpr.push(trimmedExpr[i]);\r\n    }\r\n  }\r\n  console.log(normExpr);\r\n  return normExpr;\r\n}\r\n"],"names":["CalculatorWrapper","styled","theme","ClearButtonFC","clickHandler","dataCy","children","width","onClick","defaultProps","React","DeleteBtn","props","PanelWrapper","isShown","HistoryBtn","DisplayWrapper","DisplayText","ExpressionText","HistoryWrapper","Heading","Expression","ExpressionsWrapper","KeyWrapper","KeypadWrapper","Key","keys6","keys","DisplayFC","screenValue","useSelector","state","calculator","num","calcResult","answer","lastExpression","store","history","scrValue","useMemo","KeyFC","element","dispatch","useDispatch","handleClick","useCallback","map","key","HistoryFC","expr","index","clearHistory","useState","setIsShown","storageIsShown","localStorage","getItem","checkLocalStorage","useEffect","setItem","current","HomeWrapper","loadButton","type","LOAD_BUTTON","payload","loadC","LOAD_C","loadCE","LOAD_CE","loadAnswer","LOAD_ANSWER","addToHistory","expressionWithResult","ADD_TO_HISTORY","CLEAR_HISTORY","add","x","y","sub","mul","div","remainder","Command","execute","value1","value2","this","AddCommand","SubCommand","MulCommand","DivCommand","RemainderCommand","Calculator","result","command","getResult","calculate","op","a","b","numA","Number","numB","NaN","checkValidBrackets","str","stack","res","filter","el","forEach","push","length","pop","nums","ops","operators","brackets","i","Object","includes","prevOp","prevPrior","currOp","currPrior","calculatedVal","indexOf","j","k","Infinity","isNaN","isFinite","toString","split","toFixed","err","equalHandler","calculateExpression","trimmedExpr","trim","normExpr","console","log","normalizeExpression","numsAndOpsHandler","operatorsAndBrackets","operatorsOnly","prevAnswer","operatorsHandler","String","numbers","match","notOperations","symbols","digits","bracketIndex","lastIndexOf","slice","screenVal","lastSymb","indexOfLastSymb","afterSymb","beforeSymb","lengthDiff","negativePositiveChange","commaHandler","ceHandler"],"sourceRoot":""}