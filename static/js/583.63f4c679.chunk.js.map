{"version":3,"file":"static/js/583.63f4c679.chunk.js","mappings":"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","sources":["components/ClearButton/ClearButtonFC.jsx","components/ClearButton/styles.js","store/actions/ThemeActions.js","constants/Options.js","components/ThemeSwitcher/styles.js","components/ThemeSwitcher/index.jsx","components/Settings/styles.js","components/Settings/index.jsx","pages/SettingsPage/index.jsx","store/actions/CalculatorActions.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DeleteBtn from './styles';\r\n\r\nfunction ClearButtonFC({ clickHandler, dataCy, children, width }) {\r\n  return (\r\n    <DeleteBtn onClick={clickHandler} data-cy={dataCy} width={width}>\r\n      {children}\r\n    </DeleteBtn>\r\n  );\r\n}\r\n\r\nClearButtonFC.propTypes = {\r\n  clickHandler: PropTypes.func.isRequired,\r\n  dataCy: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  width: PropTypes.string,\r\n};\r\nClearButtonFC.defaultProps = {\r\n  width: 'auto',\r\n};\r\n\r\nexport default React.memo(ClearButtonFC);\r\n","import styled from 'styled-components';\r\nimport theme from '@src/theme';\r\n\r\nconst { height, fontSize, borderRadius, borderSize, btnBorder, btnBgColor, btnBgColorHover } = theme;\r\n\r\nconst DeleteBtn = styled.div`\r\n  width: ${(props) => (props.width ? props.width : 'auto')};\r\n  height: ${height[2]}px;\r\n  text-align: center;\r\n  font-size: ${fontSize[4]}px;\r\n  border-radius: ${borderRadius[0]}px;\r\n  border: ${borderSize[1]}px solid ${btnBorder};\r\n  cursor: pointer;\r\n  background-color: ${btnBgColor};\r\n  &:hover {\r\n    background-color: ${btnBgColorHover};\r\n  }\r\n`;\r\n\r\nexport default DeleteBtn;\r\n","import { CHANGE_THEME } from '@constants/ActionsConstants';\r\n\r\nconst changeTheme = (theme) => ({\r\n  type: CHANGE_THEME,\r\n  theme,\r\n});\r\n\r\nexport default changeTheme;\r\n","const options = [\r\n  { value: 'dark', text: 'Dark Theme' },\r\n  { value: 'light', text: 'Light Theme' },\r\n];\r\n\r\nexport default options;\r\n","import styled from 'styled-components';\r\nimport theme from '@src/theme';\r\n\r\nconst { margin, width, height, fontSize, borderRadius, borderSize, btnBgColor, mainTextColor, btnBorder } = theme;\r\n\r\nexport const SwitcherWrapper = styled.div`\r\n  margin-bottom: ${margin[2]}px;\r\n`;\r\n\r\nexport const Select = styled.select`\r\n  width: ${width[4]}px;\r\n  height: ${height[2]}px;\r\n  background-color: ${btnBgColor};\r\n  color: ${mainTextColor};\r\n  text-align: center;\r\n  font-size: ${fontSize[4]}px;\r\n  border-radius: ${borderRadius[0]}px;\r\n  border: ${borderSize[1]}px solid ${btnBorder};\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  color: ${mainTextColor};\r\n  font-size: ${fontSize[1]};\r\n`;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport changeTheme from '@store/actions/ThemeActions';\r\nimport options from '@constants/Options';\r\n\r\nimport { Select, SwitcherWrapper, Text } from './styles';\r\n\r\nfunction ThemeSwitcher() {\r\n  const dispatch = useDispatch();\r\n  const actualTheme = useSelector((store) => store.theme);\r\n\r\n  const changeSelect = (e) => {\r\n    dispatch(changeTheme(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <SwitcherWrapper>\r\n      <Text>Switch Theme</Text>\r\n      <Select value={actualTheme} onChange={changeSelect} data-cy=\"theme-switcher\">\r\n        {options.map((opt) => {\r\n          const { value, text } = opt;\r\n          return (\r\n            <option value={value} key={value}>\r\n              {text}\r\n            </option>\r\n          );\r\n        })}\r\n      </Select>\r\n    </SwitcherWrapper>\r\n  );\r\n}\r\n\r\nexport default ThemeSwitcher;\r\n","import styled from 'styled-components';\r\nimport theme from '@src/theme';\r\n\r\nconst { padding, margin, fontSize } = theme;\r\n\r\nexport const PanelWrapper = styled.div`\r\n  padding: ${padding[2]}px;\r\n`;\r\n\r\nexport const Heading = styled.h2`\r\n  margin: ${margin[2]}px 0;\r\n  font-size: ${fontSize[5]}px;\r\n`;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { clearHistory, loadC } from '@store/actions/CalculatorActions';\r\nimport ThemeSwitcher from '@components/ThemeSwitcher';\r\nimport ClearButton from '@components/ClearButton/ClearButtonFC';\r\nimport theme from '@src/theme';\r\nimport { PanelWrapper, Heading } from './styles';\r\n\r\nfunction ControlPanel() {\r\n  const dispatch = useDispatch();\r\n  const clickHandler = () => {\r\n    dispatch(clearHistory());\r\n    dispatch(loadC());\r\n  };\r\n  return (\r\n    <PanelWrapper>\r\n      <Heading>Settings</Heading>\r\n      <ThemeSwitcher />\r\n      <ClearButton clickHandler={clickHandler} dataCy=\"clear-all\" width={`${theme.width[4]}px`}>\r\n        Clear All\r\n      </ClearButton>\r\n    </PanelWrapper>\r\n  );\r\n}\r\n\r\nexport default ControlPanel;\r\n","import React from 'react';\r\nimport ControlPanel from '@components/Settings';\r\n\r\nfunction Settings() {\r\n  return <ControlPanel />;\r\n}\r\n\r\nexport default Settings;\r\n","import { LOAD_BUTTON, LOAD_ANSWER, LOAD_C, LOAD_CE, ADD_TO_HISTORY, CLEAR_HISTORY } from '@constants/ActionsConstants';\r\n\r\nexport const loadButton = (num) => ({\r\n  type: LOAD_BUTTON,\r\n  payload: num,\r\n});\r\n\r\nexport const loadC = () => ({\r\n  type: LOAD_C,\r\n});\r\n\r\nexport const loadCE = () => ({\r\n  type: LOAD_CE,\r\n});\r\n\r\nexport const loadAnswer = (answer) => ({\r\n  type: LOAD_ANSWER,\r\n  payload: answer,\r\n});\r\n\r\nexport const addToHistory = (lastExpression, expressionWithResult) => ({\r\n  type: ADD_TO_HISTORY,\r\n  lastExpression,\r\n  expressionWithResult,\r\n});\r\n\r\nexport const clearHistory = () => ({\r\n  type: CLEAR_HISTORY,\r\n});\r\n"],"names":["ClearButtonFC","clickHandler","dataCy","children","width","onClick","defaultProps","React","height","theme","fontSize","borderRadius","borderSize","btnBorder","btnBgColor","btnBgColorHover","DeleteBtn","styled","props","type","CHANGE_THEME","value","text","margin","mainTextColor","SwitcherWrapper","Select","Text","dispatch","useDispatch","actualTheme","useSelector","store","onChange","e","changeTheme","target","options","opt","padding","PanelWrapper","Heading","clearHistory","loadC","loadButton","num","LOAD_BUTTON","payload","LOAD_C","loadCE","LOAD_CE","loadAnswer","answer","LOAD_ANSWER","addToHistory","lastExpression","expressionWithResult","ADD_TO_HISTORY","CLEAR_HISTORY"],"sourceRoot":""}