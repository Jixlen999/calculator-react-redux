{"version":3,"file":"static/js/410.b16a035b.chunk.js","mappings":"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","sources":["components/Calculator/styles.js","components/ClearButton/styles.js","components/ControlPanel/styles.js","components/Display/styles.js","components/History/styles.js","components/Key/styles.js","components/Keypad/styles.js","constants/KeysConstants.js","components/Display/DisplayCC.jsx","components/Key/KeyCC.jsx","components/Keypad/KeypadCC.jsx","components/Calculator/CalculatorCC.jsx","components/ClearButton/ClearButtonCC.jsx","components/History/HistoryCC.jsx","components/ControlPanel/ControlPanelCC.jsx","pages/HomePage/HomeCC.jsx","pages/HomePage/styles.js","store/actions/CalculatorActions.js","utils/calculationFunc.js","utils/keyClickHandler.js","utils/normalizeFunc.js"],"sourcesContent":["import styled from 'styled-components';\r\nimport theme from '@src/theme';\r\n\r\nconst { padding, height, width, borderSize, borderColor } = theme;\r\n\r\nconst CalculatorWrapper = styled.div`\r\n  padding-right: ${padding[1]}px;\r\n  height: ${height[6]}%;\r\n  width: ${width[3]}%;\r\n  border-right: ${borderSize[1]}px solid ${borderColor};\r\n`;\r\n\r\nexport default CalculatorWrapper;\r\n","import styled from 'styled-components';\r\nimport theme from '@src/theme';\r\n\r\nconst { height, fontSize, borderRadius, borderSize, btnBorder, btnBgColor, btnBgColorHover } = theme;\r\n\r\nconst DeleteBtn = styled.div`\r\n  width: ${(props) => (props.width ? props.width : 'auto')};\r\n  height: ${height[2]}px;\r\n  text-align: center;\r\n  font-size: ${fontSize[4]}px;\r\n  border-radius: ${borderRadius[0]}px;\r\n  border: ${borderSize[1]}px solid ${btnBorder};\r\n  cursor: pointer;\r\n  background-color: ${btnBgColor};\r\n  &:hover {\r\n    background-color: ${btnBgColorHover};\r\n  }\r\n`;\r\n\r\nexport default DeleteBtn;\r\n","import styled from 'styled-components';\r\nimport theme from '@src/theme';\r\n\r\nconst { padding, height, transition, margin, fontSize } = theme;\r\n\r\nexport const PanelWrapper = styled.div`\r\n  padding-right: ${padding[1]}px;\r\n  height: ${height[6]}%;\r\n  display: flex;\r\n  align-items: center;\r\n  transition: all ${transition[0]}s ease;\r\n  width: ${(props) => (props.isShown ? '20%' : '2%')};\r\n`;\r\n\r\nexport const HistoryBtn = styled.div`\r\n  margin-left: ${margin[1]}px;\r\n  font-size: ${fontSize[4]}px;\r\n  display: inline-block;\r\n  width: ${fontSize[5]}px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    font-size: ${fontSize[5]}px;\r\n  }\r\n  transition: all ${transition[0]}s ease;\r\n`;\r\n","import styled from 'styled-components';\r\nimport theme from '@src/theme';\r\n\r\nconst { height, padding, borderSize, borderColor, fontSize, fontWeight } = theme;\r\n\r\nexport const DisplayWrapper = styled.div`\r\n  min-height: ${height[1]}%;\r\n  padding: ${padding[1]}px;\r\n  text-align: right;\r\n  border-bottom: ${borderSize[1]}px solid ${borderColor};\r\n`;\r\nexport const DisplayText = styled.p`\r\n  font-size: ${fontSize[4]}px;\r\n  font-weight: ${fontWeight[1]};\r\n`;\r\nexport const ExpressionText = styled.p`\r\n  font-size: ${fontSize[0]}px;\r\n`;\r\n","import styled from 'styled-components';\r\nimport theme from '@src/theme';\r\n\r\nconst { width, fontSize, margin, height } = theme;\r\n\r\nexport const HistoryWrapper = styled.div`\r\n  width: ${width[3]}%;\r\n  text-align: center;\r\n  visibility: ${(props) => (props.isShown ? 'visible' : 'hidden')};\r\n`;\r\n\r\nexport const Heading = styled.h2`\r\n  font-size: ${fontSize[3]}px;\r\n  margin-bottom: ${margin[1]}%;\r\n`;\r\n\r\nexport const Expression = styled.p`\r\n  font-size: ${fontSize[2]}px;\r\n  margin-bottom: ${margin[0]}%;\r\n`;\r\nexport const ExpressionsWrapper = styled.div`\r\n  height: ${height[3]}vh;\r\n  overflow-y: auto;\r\n  margin-bottom: ${margin[2]}px;\r\n`;\r\n","import styled from 'styled-components';\r\nimport theme from '@src/theme';\r\n\r\nconst {\r\n  width,\r\n  height,\r\n  fontSize,\r\n  fontWeight,\r\n  borderRadius,\r\n  borderSize,\r\n  btnBgColor,\r\n  btnBorder,\r\n  mainTextColor,\r\n  btnBgColorHover,\r\n} = theme;\r\n\r\nconst KeyWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: ${width[1]}vw;\r\n  height: ${height[0]}vh;\r\n  font-size: ${fontSize[4]}px;\r\n  color: ${mainTextColor};\r\n  text-align: center;\r\n  font-weight: ${fontWeight[1]};\r\n  border-radius: ${borderRadius[0]}px;\r\n  border: ${borderSize[1]}px solid ${btnBorder};\r\n  background-color: ${btnBgColor};\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: ${btnBgColorHover};\r\n  }\r\n`;\r\n\r\nexport default KeyWrapper;\r\n","import styled from 'styled-components';\r\nimport theme from '@src/theme';\r\n\r\nconst { width, height, padding, gap } = theme;\r\n\r\nexport const KeypadWrapper = styled.div`\r\n  width: ${width[3]}%;\r\n  height: ${height[4]}%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: ${padding[2]}px ${padding[3]}px 0px ${padding[3]}px;\r\n`;\r\n\r\nexport const Key = styled.div`\r\n  display: flex;\r\n  gap: ${gap[0]}%;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n","const keys1 = ['%', '9', '8', '('];\r\nconst keys2 = ['*', '7', '6', ')'];\r\nconst keys3 = ['/', '5', '4', '±'];\r\nconst keys4 = ['+', '3', '2', '.'];\r\nconst keys5 = ['-', '1', '0', '='];\r\nexport const keys6 = ['C', 'CE'];\r\nexport const keys = [keys1, keys2, keys3, keys4, keys5];\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { DisplayWrapper, DisplayText, ExpressionText } from './styles';\r\n\r\nclass DisplayCC extends React.PureComponent {\r\n  render() {\r\n    const { screenValue, calcResult, lastExpression } = this.props;\r\n    const scrValue = screenValue === '' ? 0 : screenValue;\r\n    return (\r\n      <DisplayWrapper>\r\n        <ExpressionText>\r\n          {/* Если результат еще не подсчитан, или его значение не валидно,\r\n          то последнее выражение над результатом не выводится */}\r\n          {calcResult === '' || calcResult === 'Invalid input' || calcResult === 'Division by zero error'\r\n            ? ''\r\n            : lastExpression}\r\n        </ExpressionText>\r\n        <DisplayText data-cy=\"display\">{calcResult === '' ? scrValue : calcResult}</DisplayText>\r\n      </DisplayWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nDisplayCC.propTypes = {\r\n  screenValue: PropTypes.string.isRequired,\r\n  calcResult: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  lastExpression: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  screenValue: state.calculator.num,\r\n  calcResult: state.calculator.answer,\r\n  lastExpression: state.history.lastExpression,\r\n});\r\n\r\nexport default connect(mapStateToProps)(DisplayCC);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport clickHandler from '@utils/keyClickHandler';\r\nimport KeyWrapper from './styles';\r\n\r\nclass KeyCC extends React.PureComponent {\r\n  render() {\r\n    const { element, screenValue, answer, dispatch } = this.props;\r\n    const handleClick = () => {\r\n      clickHandler(element, dispatch, screenValue, answer);\r\n    };\r\n    return (\r\n      <KeyWrapper data-cy={`key-${element}`} onClick={handleClick}>\r\n        {element}\r\n      </KeyWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nKeyCC.propTypes = {\r\n  element: PropTypes.string.isRequired,\r\n  screenValue: PropTypes.string.isRequired,\r\n  answer: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  dispatch: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  screenValue: state.calculator.num,\r\n  answer: state.calculator.answer,\r\n});\r\n\r\nexport default connect(mapStateToProps)(KeyCC);\r\n","import React from 'react';\r\nimport KeyCC from '@components/Key/KeyCC';\r\nimport { keys6, keys } from '@constants/KeysConstants';\r\nimport { KeypadWrapper, Key } from './styles';\r\n\r\nclass KeypadFC extends React.Component {\r\n  render() {\r\n    return (\r\n      <KeypadWrapper>\r\n        {keys.map((element) => (\r\n          <Key key={element}>\r\n            {element.map((key) => (\r\n              <KeyCC key={key} element={key} />\r\n            ))}\r\n          </Key>\r\n        ))}\r\n\r\n        <Key>\r\n          {keys6.map((element) => (\r\n            <KeyCC key={element} element={element} />\r\n          ))}\r\n        </Key>\r\n      </KeypadWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default KeypadFC;\r\n","import React from 'react';\r\nimport DisplayCC from '@components/Display/DisplayCC';\r\nimport KeypadCC from '@components/Keypad/KeypadCC';\r\nimport CalculatorWrapper from './styles';\r\n\r\nclass CalculatorCC extends React.Component {\r\n  render() {\r\n    return (\r\n      <CalculatorWrapper>\r\n        <DisplayCC />\r\n        <KeypadCC />\r\n      </CalculatorWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CalculatorCC;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { clearHistory } from '@store/actions/CalculatorActions';\r\nimport DeleteBtn from './styles';\r\n\r\nclass ClearButtonCC extends React.Component {\r\n  render() {\r\n    const { dispatch } = this.props;\r\n    const clickHandler = () => {\r\n      dispatch(clearHistory());\r\n    };\r\n    return (\r\n      <DeleteBtn data-cy=\"delete-history\" onClick={clickHandler}>\r\n        Clear\r\n      </DeleteBtn>\r\n    );\r\n  }\r\n}\r\n\r\nClearButtonCC.propTypes = {\r\n  dispatch: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect()(ClearButtonCC);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport ClearButtonCC from '@components/ClearButton/ClearButtonCC';\r\nimport { HistoryWrapper, Heading, Expression, ExpressionsWrapper } from './styles';\r\n\r\nclass HistoryCC extends React.PureComponent {\r\n  render() {\r\n    const { isShown, history } = this.props;\r\n    return (\r\n      <HistoryWrapper isShown={isShown}>\r\n        <Heading>History</Heading>\r\n        <ExpressionsWrapper data-cy=\"history\">\r\n          {history.map((expr, index) => (\r\n            <Expression key={`${expr}_${index}`}>{expr}</Expression>\r\n          ))}\r\n        </ExpressionsWrapper>\r\n        <ClearButtonCC />\r\n      </HistoryWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nHistoryCC.propTypes = {\r\n  isShown: PropTypes.bool.isRequired,\r\n  history: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ history: state.history.history });\r\n\r\nexport default connect(mapStateToProps)(HistoryCC);\r\n","import React from 'react';\r\nimport { SlArrowLeft, SlArrowRight } from 'react-icons/sl';\r\nimport HistoryCC from '@components/History/HistoryCC';\r\nimport { PanelWrapper, HistoryBtn } from './styles';\r\n\r\nclass ControlPanelCC extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isShown: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ isShown: localStorage.getItem('isShown') !== 'false' });\r\n  }\r\n\r\n  render() {\r\n    const { isShown } = this.state;\r\n\r\n    const handleClick = () => {\r\n      localStorage.setItem('isShown', !isShown);\r\n      this.setState((prevState) => ({ isShown: !prevState.isShown }));\r\n    };\r\n    return (\r\n      <PanelWrapper isShown={isShown}>\r\n        <HistoryBtn onClick={handleClick} data-cy=\"open-history\">\r\n          {isShown ? <SlArrowRight /> : <SlArrowLeft />}\r\n        </HistoryBtn>\r\n        <HistoryCC isShown={isShown} />\r\n      </PanelWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ControlPanelCC;\r\n","import React from 'react';\r\nimport CalculatorCC from '@components/Calculator/CalculatorCC';\r\nimport ControlPanelCC from '@components/ControlPanel/ControlPanelCC';\r\nimport HomeWrapper from './styles';\r\n\r\nclass HomeCC extends React.Component {\r\n  render() {\r\n    return (\r\n      <HomeWrapper>\r\n        <CalculatorCC />\r\n        <ControlPanelCC />\r\n      </HomeWrapper>\r\n    );\r\n  }\r\n}\r\nexport default HomeCC;\r\n","import styled from 'styled-components';\r\nimport theme from '@src/theme';\r\n\r\nconst { padding, width, height } = theme;\r\n\r\nconst HomeWrapper = styled.div`\r\n  display: flex;\r\n  padding: ${padding[1]}px;\r\n  width: ${width[3]}%;\r\n  height: ${height[6]}%;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport default HomeWrapper;\r\n","import { LOAD_BUTTON, LOAD_ANSWER, LOAD_C, LOAD_CE, ADD_TO_HISTORY, CLEAR_HISTORY } from '@constants/ActionsConstants';\r\n\r\nexport const loadButton = (num) => ({\r\n  type: LOAD_BUTTON,\r\n  payload: num,\r\n});\r\n\r\nexport const loadC = () => ({\r\n  type: LOAD_C,\r\n});\r\n\r\nexport const loadCE = () => ({\r\n  type: LOAD_CE,\r\n});\r\n\r\nexport const loadAnswer = (answer) => ({\r\n  type: LOAD_ANSWER,\r\n  payload: answer,\r\n});\r\n\r\nexport const addToHistory = (lastExpression, expressionWithResult) => ({\r\n  type: ADD_TO_HISTORY,\r\n  lastExpression,\r\n  expressionWithResult,\r\n});\r\n\r\nexport const clearHistory = () => ({\r\n  type: CLEAR_HISTORY,\r\n});\r\n","function add(x, y) {\r\n  return x + y;\r\n}\r\nfunction sub(x, y) {\r\n  return x - y;\r\n}\r\nfunction mul(x, y) {\r\n  return x * y;\r\n}\r\nfunction div(x, y) {\r\n  return x / y;\r\n}\r\nfunction remainder(x, y) {\r\n  return x % y;\r\n}\r\n\r\nconst Command = function (execute, value1, value2) {\r\n  this.execute = execute;\r\n  this.value1 = value1;\r\n  this.value2 = value2;\r\n};\r\nconst AddCommand = function (value1, value2) {\r\n  return new Command(add, value1, value2);\r\n};\r\n\r\nconst SubCommand = function (value1, value2) {\r\n  return new Command(sub, value1, value2);\r\n};\r\n\r\nconst MulCommand = function (value1, value2) {\r\n  return new Command(mul, value1, value2);\r\n};\r\n\r\nconst DivCommand = function (value1, value2) {\r\n  return new Command(div, value1, value2);\r\n};\r\n\r\nconst RemainderCommand = function (value1, value2) {\r\n  return new Command(remainder, value1, value2);\r\n};\r\n\r\nconst Calculator = function () {\r\n  let result = 0;\r\n\r\n  return {\r\n    execute(command) {\r\n      result = command.execute(command.value1, command.value2);\r\n    },\r\n\r\n    getResult() {\r\n      return result;\r\n    },\r\n  };\r\n};\r\n\r\nfunction calculate(op, a, b) {\r\n  const calculator = new Calculator();\r\n  const numA = Number(a);\r\n  const numB = Number(b);\r\n  // a - предпоследнее число\r\n  // b - последнее число\r\n  // поэтому меняем местами, чтобы первое, поделить на второе\r\n  switch (op) {\r\n    case '+':\r\n      calculator.execute(new AddCommand(numA, numB));\r\n      return calculator.getResult();\r\n    case '-':\r\n      calculator.execute(new SubCommand(numB, numA));\r\n      return calculator.getResult();\r\n    case '/':\r\n      calculator.execute(new DivCommand(numB, numA));\r\n      return calculator.getResult();\r\n    case '*':\r\n      calculator.execute(new MulCommand(numA, numB));\r\n      return calculator.getResult();\r\n    case '%':\r\n      calculator.execute(new RemainderCommand(numB, numA));\r\n      return calculator.getResult();\r\n    default:\r\n      return NaN;\r\n  }\r\n}\r\n\r\nfunction checkValidBrackets(str) {\r\n  const stack = [];\r\n  let res = true;\r\n\r\n  const filteredStr = str.filter((el) => el === ')' || el === '(');\r\n\r\n  filteredStr.forEach((el) => {\r\n    if (el === '(') {\r\n      stack.push(el);\r\n    } else {\r\n      if (stack.length > 0) {\r\n        stack.pop();\r\n      } else res = false;\r\n    }\r\n  });\r\n\r\n  return res;\r\n}\r\n\r\nfunction calculateExpression(expr) {\r\n  const nums = [];\r\n  const ops = [];\r\n  const operators = {};\r\n  operators['+'] = 0;\r\n  operators['-'] = 0;\r\n  operators['*'] = 1;\r\n  operators['/'] = 1;\r\n  operators['%'] = 1;\r\n  const brackets = ['(', ')'];\r\n\r\n  try {\r\n    for (let i = 0; i < expr.length; i += 1) {\r\n      // для числа\r\n      if (!(Object.keys(operators).includes(expr[i]) || brackets.includes(expr[i]))) {\r\n        nums.push(expr[i]);\r\n      } else {\r\n        // для не числа\r\n        if (ops.length === 0) {\r\n          ops.push(expr[i]);\r\n        } else {\r\n          if (Object.keys(operators).includes(expr[i])) {\r\n            const prevOp = ops[ops.length - 1];\r\n            if (Object.keys(operators).includes(prevOp)) {\r\n              const prevPrior = operators[prevOp];\r\n              const currOp = expr[i];\r\n              const currPrior = operators[currOp];\r\n              // если приоритет последней опериации ниже или равен приоритету предыдущей операции,\r\n              // то делаем рассчеты для предыдущей оперции и двух последних чисел\r\n              if (prevPrior > currPrior || prevPrior === currPrior) {\r\n                const calculatedVal = calculate(prevOp, nums.pop(), nums.pop());\r\n                nums.push(calculatedVal);\r\n                ops.pop();\r\n                ops.push(currOp);\r\n              } else {\r\n                ops.push(expr[i]);\r\n              }\r\n            } else {\r\n              ops.push(expr[i]);\r\n            }\r\n          } else {\r\n            // подсчеты внутри скобок\r\n            const countOpenBrackets = expr.filter((el) => el === '(').length;\r\n            const countClosedBrackets = expr.filter((el) => el === ')').length;\r\n            if (countOpenBrackets !== countClosedBrackets) {\r\n              return 'Invalid input';\r\n            }\r\n            if (!checkValidBrackets(expr)) {\r\n              return 'Invalid input';\r\n            }\r\n            if (expr[i] === ')') {\r\n              if (expr.indexOf('(') !== -1 && expr.indexOf('(') < i) {\r\n                let j = ops.length - 1;\r\n                while (ops[j] !== '(') {\r\n                  const calculatedVal = calculate(ops[j], nums.pop(), nums.pop());\r\n                  nums.push(calculatedVal);\r\n                  ops.pop();\r\n                  j -= 1;\r\n                }\r\n                ops.pop();\r\n              } else {\r\n                return 'Invalid input';\r\n              }\r\n            } else {\r\n              ops.push(expr[i]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // подсчеты для оставшихся знаков\r\n    for (let k = ops.length - 1; k >= 0; k -= 1) {\r\n      const calculatedVal = calculate(ops[k], nums.pop(), nums.pop());\r\n      nums.push(calculatedVal);\r\n      ops.pop();\r\n    }\r\n    // проверки на валидность ввода, деление на 0\r\n    if (nums[0] === Infinity || nums[0] === -Infinity) {\r\n      return 'Division by zero error';\r\n    }\r\n    if (nums.length === 1 && ops.length === 0 && !Number.isNaN(nums[0]) && Number.isFinite(nums[0])) {\r\n      const digitsAfterComma = nums[0].toString().includes('.') ? nums[0].toString().split('.').pop().length : 0;\r\n      if (digitsAfterComma > 3) {\r\n        return nums[0].toFixed(3);\r\n      }\r\n      return nums[0];\r\n    }\r\n    return 'Invalid input';\r\n  } catch (err) {\r\n    return 'Invalid input';\r\n  }\r\n}\r\n\r\nexport default calculateExpression;\r\n","import { loadButton, loadCE, loadC, loadAnswer, addToHistory } from '@store/actions/CalculatorActions';\r\nimport calculateExpression from './calculationFunc';\r\nimport normalizeExpression from './normalizeFunc';\r\n\r\nconst ceHandler = (answer, screenValue, operatorsAndBrackets, dispatch) => {\r\n  if (answer === '') {\r\n    // Удаление символа для операторов и скобок, чтобы удалились и лишние пробелы\r\n    if (\r\n      screenValue[screenValue.length - 1] === ' ' &&\r\n      !operatorsAndBrackets.includes(screenValue[screenValue.length - 4])\r\n    ) {\r\n      for (let i = 0; i < 3; i += 1) {\r\n        dispatch(loadCE());\r\n      }\r\n    } else if (\r\n      screenValue[screenValue.length - 1] === ' ' &&\r\n      operatorsAndBrackets.includes(screenValue[screenValue.length - 4])\r\n    ) {\r\n      for (let i = 0; i < 2; i += 1) {\r\n        dispatch(loadCE());\r\n      }\r\n    } else {\r\n      // Для всех остальных\r\n      dispatch(loadCE());\r\n    }\r\n  }\r\n};\r\nconst equalHandler = (answer, screenValue, dispatch) => {\r\n  if (answer === '') {\r\n    const result = calculateExpression(normalizeExpression(screenValue));\r\n    dispatch(loadAnswer(result));\r\n    // Если результат не валидный, то он в историю не добавляется\r\n    if (result !== 'Invalid input' && result !== 'Division by zero error') {\r\n      dispatch(addToHistory(`${screenValue} =`, `${screenValue} = ${result}`));\r\n    }\r\n  }\r\n};\r\n\r\nconst operatorsHandler = (operatorsOnly, screenValue, prevAnswer, el, dispatch) => {\r\n  if (\r\n    operatorsOnly.includes(el) &&\r\n    operatorsOnly.includes(screenValue[screenValue.length - 2]) &&\r\n    el !== screenValue[screenValue.length - 2]\r\n  ) {\r\n    dispatch(loadCE());\r\n    dispatch(loadCE());\r\n  } else if (el === screenValue[screenValue.length - 2] && el !== '(' && el !== ')') {\r\n    return;\r\n  }\r\n  if (prevAnswer !== '') {\r\n    if (prevAnswer !== 'Invalid input' && prevAnswer !== 'Division by zero error') {\r\n      dispatch(loadButton(prevAnswer));\r\n    } else {\r\n      dispatch(loadButton(0));\r\n    }\r\n  }\r\n  if (screenValue === '' && el !== '(' && el !== ')') {\r\n    // если еще ничего не было введено, но уже попытались ввести\r\n    // арифм операцию - добавить 0 в качестве первого символа\r\n    dispatch(loadButton(0));\r\n    dispatch(loadButton(` ${el} `));\r\n  } else if (screenValue[screenValue.length - 1] === ' ') {\r\n    dispatch(loadButton(`${el} `));\r\n  } else {\r\n    // каждый знак (если за ним следует число) отделять пробелами\r\n    dispatch(loadButton(` ${el} `));\r\n  }\r\n};\r\n\r\nconst commaHandler = (screenValue, dispatch, prevAnswer, el) => {\r\n  // Обработка на случай, если последний эл-т - оператор, скобка или точка\r\n  if (screenValue[screenValue.length - 2] !== ')' && screenValue[screenValue.length - 1] !== '.') {\r\n    if (screenValue[screenValue.length - 1] === ' ' || screenValue.length === 0) {\r\n      dispatch(loadButton(`0${el}`));\r\n    } else if (prevAnswer) {\r\n      dispatch(loadButton(`0${el}`));\r\n    } else {\r\n      dispatch(loadButton(el));\r\n    }\r\n  }\r\n};\r\n\r\nconst negativePositiveChange = (screenValue, dispatch, prevAnswer) => {\r\n  if (prevAnswer !== '') {\r\n    if (prevAnswer !== 'Invalid input' && prevAnswer !== 'Division by zero error') {\r\n      dispatch(loadButton(prevAnswer));\r\n      screenValue = String(prevAnswer);\r\n      prevAnswer = '';\r\n    }\r\n  }\r\n  const numbers = screenValue.split(' ').filter((el) => !Number.isNaN(+el));\r\n  if (numbers[numbers.length - 1].match(/\\d/) || screenValue[screenValue.length - 1] === ')') {\r\n    const notOperations = [' ', '.', ')', '('];\r\n    let symbols = [];\r\n    let digits = [];\r\n    if (screenValue[screenValue.length - 3] === '(' || screenValue[screenValue.length - 6] === '(') {\r\n      // Если перед эл-м открывается скобка - составляем массив из символов и операторов, начиная с нее\r\n      const bracketIndex = screenValue.lastIndexOf('(');\r\n      screenValue = screenValue.slice(bracketIndex + 2);\r\n      symbols = screenValue.split('').filter((el) => !el.match(/\\d/) && !notOperations.includes(el));\r\n      digits = screenValue.split(' ').filter((el) => el.match(/\\d/));\r\n    } else {\r\n      // В ином случае - составляем из всего выражения\r\n      symbols = screenValue.split('').filter((el) => !el.match(/\\d/) && !notOperations.includes(el));\r\n      digits = screenValue.split(' ').filter((el) => el.match(/\\d/));\r\n    }\r\n    // Обработка для первого числа, введенного в строку (т.е для первого и единственного положительного символа)\r\n    if (symbols.length === 0) {\r\n      const screenVal = screenValue;\r\n      for (let i = 0; i < screenValue.length; i += 1) {\r\n        dispatch(loadCE());\r\n      }\r\n      dispatch(loadButton(`- ${screenVal}`));\r\n      // Для первого и единственного отрицательного\r\n    } else if (symbols.length === 1 && digits.length === 1 && symbols[0] === '-') {\r\n      const allElements = screenValue.split('');\r\n      let screenVal = null;\r\n      if (allElements[1] === ' ') {\r\n        screenVal = screenValue.slice(2);\r\n      } else {\r\n        screenVal = screenValue.slice(1);\r\n      }\r\n      for (let i = 0; i < screenValue.length; i += 1) {\r\n        dispatch(loadCE());\r\n      }\r\n      dispatch(loadButton(`${screenVal}`));\r\n    } else {\r\n      const lastSymb = symbols[symbols.length - 1];\r\n      const indexOfLastSymb = screenValue.lastIndexOf(lastSymb);\r\n      let afterSymb = screenValue.slice(indexOfLastSymb + 1);\r\n      const beforeSymb = screenValue.slice(0, indexOfLastSymb);\r\n      const lengthDiff = screenValue.length - beforeSymb.length;\r\n      if (lastSymb === '+' || lastSymb === '-') {\r\n        if (lastSymb === '+') {\r\n          for (let i = 0; i < lengthDiff; i += 1) {\r\n            dispatch(loadCE());\r\n          }\r\n          dispatch(loadButton(`+ ( -${afterSymb} )`));\r\n        } else {\r\n          if (beforeSymb[beforeSymb.length - 2] === '(') {\r\n            for (let i = 0; i < lengthDiff + 2; i += 1) {\r\n              dispatch(loadCE());\r\n            }\r\n            afterSymb = afterSymb.slice(1, -2);\r\n            dispatch(loadButton(`${afterSymb}`));\r\n          } else {\r\n            for (let i = 0; i < lengthDiff; i += 1) {\r\n              dispatch(loadCE());\r\n            }\r\n            dispatch(loadButton(`- ( -${afterSymb} )`));\r\n          }\r\n        }\r\n      } else {\r\n        // Обработка для случаев, когда послений введенный оператор - не минус, и не плюс в таком случае просто преврщаем el => (- el)\r\n        for (let i = 0; i < lengthDiff; i += 1) {\r\n          dispatch(loadCE());\r\n        }\r\n        dispatch(loadButton(`${lastSymb} ( -${afterSymb} )`));\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst numsAndOpsHandler = (answer, screenValue, operatorsAndBrackets, operatorsOnly, dispatch, el) => {\r\n  const prevAnswer = answer;\r\n  if (prevAnswer !== '') {\r\n    dispatch(loadC());\r\n  }\r\n  if (operatorsAndBrackets.includes(el)) {\r\n    operatorsHandler(operatorsOnly, screenValue, prevAnswer, el, dispatch);\r\n  } else {\r\n    if (el === '±') {\r\n      negativePositiveChange(screenValue, dispatch, prevAnswer);\r\n    } else if (el === '.') {\r\n      commaHandler(screenValue, dispatch, prevAnswer, el);\r\n    } else {\r\n      // Для цифр\r\n      dispatch(loadButton(el));\r\n    }\r\n  }\r\n};\r\n\r\nfunction clickHandler(el, dispatch, screenValue, answer) {\r\n  const operatorsAndBrackets = ['+', '-', '/', '*', '(', ')', '%'];\r\n  const operatorsOnly = ['+', '-', '/', '*', '%'];\r\n  if (el === 'CE') {\r\n    ceHandler(answer, screenValue, operatorsAndBrackets, dispatch);\r\n  } else if (el === 'C') {\r\n    dispatch(loadC());\r\n  } else if (el === '=') {\r\n    equalHandler(answer, screenValue, dispatch);\r\n  } else {\r\n    numsAndOpsHandler(answer, screenValue, operatorsAndBrackets, operatorsOnly, dispatch, el);\r\n  }\r\n}\r\n\r\nexport default clickHandler;\r\n","export default function normalizeExpression(expr) {\r\n  // функция для совмещения числа с минусом, идущим перед ним\r\n  let trimmedExpr = expr.trim();\r\n  trimmedExpr = trimmedExpr.split(' ');\r\n  const normExpr = [];\r\n  for (let i = 0; i < trimmedExpr.length; i += 1) {\r\n    if (\r\n      trimmedExpr[i] === '-' &&\r\n      (Number.isNaN(+trimmedExpr[i - 1]) || i === 0) &&\r\n      !Number.isNaN(+trimmedExpr[i + 1])\r\n    ) {\r\n      i += 1;\r\n      normExpr.push(`-${trimmedExpr[i]}`);\r\n    } else {\r\n      normExpr.push(trimmedExpr[i]);\r\n    }\r\n  }\r\n  return normExpr;\r\n}\r\n"],"names":["padding","theme","height","width","borderSize","borderColor","CalculatorWrapper","styled","fontSize","borderRadius","btnBorder","btnBgColor","btnBgColorHover","DeleteBtn","props","transition","margin","PanelWrapper","isShown","HistoryBtn","fontWeight","DisplayWrapper","DisplayText","ExpressionText","HistoryWrapper","Heading","Expression","ExpressionsWrapper","mainTextColor","KeyWrapper","gap","KeypadWrapper","Key","keys6","keys","DisplayCC","this","screenValue","calcResult","lastExpression","scrValue","React","connect","state","calculator","num","answer","history","KeyCC","element","dispatch","onClick","clickHandler","KeypadFC","map","key","CalculatorCC","KeypadCC","ClearButtonCC","clearHistory","HistoryCC","expr","index","setState","localStorage","getItem","setItem","prevState","HomeCC","HomeWrapper","loadButton","type","LOAD_BUTTON","payload","loadC","LOAD_C","loadCE","LOAD_CE","loadAnswer","LOAD_ANSWER","addToHistory","expressionWithResult","ADD_TO_HISTORY","CLEAR_HISTORY","add","x","y","sub","mul","div","remainder","Command","execute","value1","value2","AddCommand","SubCommand","MulCommand","DivCommand","RemainderCommand","Calculator","result","command","getResult","calculate","op","a","b","numA","Number","numB","NaN","checkValidBrackets","str","stack","res","filter","el","forEach","push","length","pop","nums","ops","operators","brackets","i","Object","includes","prevOp","prevPrior","currOp","currPrior","calculatedVal","indexOf","j","k","Infinity","isNaN","isFinite","toString","split","toFixed","err","equalHandler","calculateExpression","trimmedExpr","trim","normExpr","normalizeExpression","numsAndOpsHandler","operatorsAndBrackets","operatorsOnly","prevAnswer","operatorsHandler","String","numbers","match","notOperations","symbols","digits","bracketIndex","lastIndexOf","slice","screenVal","lastSymb","indexOfLastSymb","afterSymb","beforeSymb","lengthDiff","negativePositiveChange","commaHandler","ceHandler"],"sourceRoot":""}