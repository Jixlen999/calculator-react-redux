{"version":3,"file":"static/js/594.649b08d6.chunk.js","mappings":"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","sources":["components/ClearButton/ClearButtonFC.jsx","components/ClearButton/styles.js","store/actions/ThemeActions.js","components/ThemeSwitcher/styles.js","components/ThemeSwitcher/ThemeSwitcher.jsx","components/ThemeSwitcher/index.js","components/Settings/styles.js","components/Settings/Settings.jsx","components/Settings/index.js","pages/SettingsPage/Settings.jsx","store/actions/CalculatorActions.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DeleteBtn from './styles';\r\n\r\nfunction ClearButtonFC({ clickHandler, dataCy, children, width }) {\r\n  return (\r\n    <DeleteBtn onClick={clickHandler} data-cy={dataCy} width={width}>\r\n      {children}\r\n    </DeleteBtn>\r\n  );\r\n}\r\n\r\nClearButtonFC.propTypes = {\r\n  clickHandler: PropTypes.func.isRequired,\r\n  dataCy: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  width: PropTypes.string,\r\n};\r\nClearButtonFC.defaultProps = {\r\n  width: 'auto',\r\n};\r\n\r\nexport default React.memo(ClearButtonFC);\r\n","import styled from 'styled-components';\r\nimport theme from '@src/theme';\r\n\r\nconst DeleteBtn = styled.div`\r\n  width: ${(props) => (props.width ? props.width : 'auto')};\r\n  height: ${theme.height[2]}px;\r\n  text-align: center;\r\n  font-size: ${theme.fontSize[4]}px;\r\n  border-radius: ${theme.borderRadius[0]}px;\r\n  border: ${theme.borderSize[1]}px solid ${theme.BTN_BORDER};\r\n  cursor: pointer;\r\n  background-color: ${theme.BTN_BG_COLOR};\r\n  &:hover {\r\n    background-color: ${theme.BTN_BG_COLOR_HOVER};\r\n  }\r\n`;\r\n\r\nexport default DeleteBtn;\r\n","import { CHANGE_THEME } from '@constants/ActionsConstants';\r\n\r\nconst changeTheme = (theme) => ({\r\n  type: CHANGE_THEME,\r\n  theme,\r\n});\r\n\r\nexport default changeTheme;\r\n","import styled from 'styled-components';\r\nimport theme from '@src/theme';\r\n\r\nexport const SwitcherWrapper = styled.div`\r\n  margin-bottom: ${theme.margin[2]}px;\r\n`;\r\n\r\nexport const Select = styled.select`\r\n  width: ${theme.width[4]}px;\r\n  height: ${theme.height[2]}px;\r\n  background-color: ${theme.BTN_BG_COLOR};\r\n  color: ${theme.MAIN_TEXT_COLOR};\r\n  text-align: center;\r\n  font-size: ${theme.fontSize[4]}px;\r\n  border-radius: ${theme.borderRadius[0]}px;\r\n  border: ${theme.borderSize[1]}px solid ${theme.BTN_BORDER};\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  color: ${theme.MAIN_TEXT_COLOR};\r\n  font-size: ${theme.fontSize[1]};\r\n`;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport changeTheme from '@store/actions/ThemeActions';\r\nimport { Select, SwitcherWrapper, Text } from './styles';\r\n\r\nfunction ThemeSwitcher() {\r\n  const dispatch = useDispatch();\r\n  const actualTheme = useSelector((store) => store.theme);\r\n\r\n  const changeSelect = (e) => {\r\n    dispatch(changeTheme(e.target.value));\r\n  };\r\n\r\n  const options = [\r\n    { value: 'dark', text: 'Dark Theme' },\r\n    { value: 'light', text: 'Light Theme' },\r\n  ];\r\n  return (\r\n    <SwitcherWrapper>\r\n      <Text>Switch Theme</Text>\r\n      <Select value={actualTheme} onChange={changeSelect} data-cy=\"theme-switcher\">\r\n        {options.map((opt) => (\r\n          <option value={opt.value} key={opt.value}>\r\n            {opt.text}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n    </SwitcherWrapper>\r\n  );\r\n}\r\n\r\nexport default ThemeSwitcher;\r\n","import ThemeSwitcher from './ThemeSwitcher';\r\n\r\nexport default ThemeSwitcher;\r\n","import styled from 'styled-components';\r\nimport theme from '@src/theme';\r\n\r\nexport const PanelWrapper = styled.div`\r\n  padding: ${theme.padding[2]}px;\r\n`;\r\n\r\nexport const Heading = styled.h2`\r\n  margin: ${theme.margin[2]}px 0;\r\n  font-size: ${theme.fontSize[5]}px;\r\n`;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { clearHistory, loadC } from '@store/actions/CalculatorActions';\r\nimport ThemeSwitcher from '@components/ThemeSwitcher';\r\nimport ClearButton from '@components/ClearButton/ClearButtonFC';\r\nimport theme from '@src/theme';\r\nimport { PanelWrapper, Heading } from './styles';\r\n\r\nfunction ControlPanel() {\r\n  const dispatch = useDispatch();\r\n  const clickHandler = () => {\r\n    dispatch(clearHistory());\r\n    dispatch(loadC());\r\n  };\r\n  return (\r\n    <PanelWrapper>\r\n      <Heading>Settings</Heading>\r\n      <ThemeSwitcher />\r\n      <ClearButton clickHandler={clickHandler} dataCy=\"clear-all\" width={`${theme.width[4]}px`}>\r\n        Clear All\r\n      </ClearButton>\r\n    </PanelWrapper>\r\n  );\r\n}\r\n\r\nexport default ControlPanel;\r\n","import Settings from './Settings';\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport ControlPanel from '@components/Settings';\r\n\r\nfunction Settings() {\r\n  return <ControlPanel />;\r\n}\r\n\r\nexport default Settings;\r\n","import { LOAD_BUTTON, LOAD_ANSWER, LOAD_C, LOAD_CE, ADD_TO_HISTORY, CLEAR_HISTORY } from '@constants/ActionsConstants';\r\n\r\nexport const loadButton = (num) => ({\r\n  type: LOAD_BUTTON,\r\n  payload: num,\r\n});\r\n\r\nexport const loadC = () => ({\r\n  type: LOAD_C,\r\n});\r\n\r\nexport const loadCE = () => ({\r\n  type: LOAD_CE,\r\n});\r\n\r\nexport const loadAnswer = (answer) => ({\r\n  type: LOAD_ANSWER,\r\n  payload: answer,\r\n});\r\n\r\nexport const addToHistory = (lastExpression, expressionWithResult) => ({\r\n  type: ADD_TO_HISTORY,\r\n  lastExpression,\r\n  expressionWithResult,\r\n});\r\n\r\nexport const clearHistory = () => ({\r\n  type: CLEAR_HISTORY,\r\n});\r\n"],"names":["ClearButtonFC","clickHandler","dataCy","children","width","onClick","defaultProps","React","DeleteBtn","styled","props","theme","type","CHANGE_THEME","SwitcherWrapper","Select","Text","dispatch","useDispatch","actualTheme","useSelector","store","value","onChange","e","changeTheme","target","text","map","opt","PanelWrapper","Heading","clearHistory","loadC","loadButton","num","LOAD_BUTTON","payload","LOAD_C","loadCE","LOAD_CE","loadAnswer","answer","LOAD_ANSWER","addToHistory","lastExpression","expressionWithResult","ADD_TO_HISTORY","CLEAR_HISTORY"],"sourceRoot":""}