{"version":3,"file":"static/js/627.18382e4c.chunk.js","mappings":"wNAOA,EALoB,SAACA,GAAK,MAAM,CAC9BC,KAAMC,EAAAA,GACNF,MAAAA,EACD,E,uCCMYG,EAAkBC,EAAAA,GAAAA,IAAU,8CACtBC,EAAAA,IAGNC,EAASF,EAAAA,GAAAA,OAAa,wMACxBG,EAAAA,GACCC,EAAAA,GACUC,EAAAA,GACXC,EAAAA,GAEIC,EAAAA,GACIC,EAAAA,GACPC,EAAAA,GAAqBC,EAAAA,IAIpBC,EAAOX,EAAAA,GAAAA,EAAQ,0DACjBM,EAAAA,I,SCGX,I,EAAA,EA1BA,WACE,IAAMM,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMpB,KAAK,IAUtD,OACE,UAACG,EAAe,YACd,SAACY,EAAI,4BACL,SAACT,EAAM,CAACe,MAAOH,EAAaI,SAXX,SAACC,GACpBP,EAASQ,EAAYD,EAAEE,OAAOJ,OAChC,EASwD,UAAQ,iBAAgB,SAPhE,CACd,CAAEA,MAAO,OAAQK,KAAM,cACvB,CAAEL,MAAO,QAASK,KAAM,gBAMXC,KAAI,SAACC,GAAG,OACf,mBAAQP,MAAOO,EAAIP,MAAM,SACtBO,EAAIF,MADwBE,EAAIP,MAE1B,QAKnB,E,UCLA,EAdkBjB,EAAAA,GAAAA,IAAU,uOACjBG,EAAAA,GACCC,EAAAA,GAEGG,EAAAA,GACIC,EAAAA,GACPC,EAAAA,GAAqBC,EAAAA,GAEXL,EAAAA,GAEEoB,EAAAA,ICDxB,I,IAAA,EAdA,WACE,IAAMb,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAAC,EAAS,CAACa,QANQ,WACnBd,GAASe,EAAAA,EAAAA,OACTf,GAASgB,EAAAA,EAAAA,MACX,EAGoC,UAAQ,YAAW,sBAIzD,ECdaC,EAAe7B,EAAAA,GAAAA,IAAU,0CAIzB8B,EAAU9B,EAAAA,GAAAA,GAAS,4DACpBC,EAAAA,GACG8B,EAAAA,ICMf,MAVA,WACE,OACE,UAACF,EAAY,YACX,SAACC,EAAO,wBACR,SAAC,EAAa,KACd,SAAC,EAAW,MAGlB,ECNA,MAJA,WACE,OAAO,SAAC,EAAY,GACtB,C,8LCHaE,EAAa,SAACC,GAAG,MAAM,CAClCpC,KAAMqC,EAAAA,GACNC,QAASF,EACV,EAEYL,EAAQ,WAAH,MAAU,CAC1B/B,KAAMuC,EAAAA,GACP,EAEYC,EAAS,WAAH,MAAU,CAC3BxC,KAAMyC,EAAAA,GACP,EAEYC,EAAa,SAACC,GAAM,MAAM,CACrC3C,KAAM4C,EAAAA,GACNN,QAASK,EACV,EAEYE,EAAe,SAACC,EAAgBC,GAAoB,MAAM,CACrE/C,KAAMgD,EAAAA,GACNF,eAAAA,EACAC,qBAAAA,EACD,EAEYjB,EAAe,WAAH,MAAU,CACjC9B,KAAMiD,EAAAA,GACP,C","sources":["store/actions/ThemeActions.js","components/ThemeSwitcher/styles.js","components/ThemeSwitcher/ThemeSwitcher.jsx","components/ClearAllBtn/styles.js","components/ClearAllBtn/ClearAllBtn.jsx","components/Settings/styles.js","components/Settings/Settings.jsx","pages/SettingsPage/Settings.jsx","store/actions/CalculatorActions.js"],"sourcesContent":["import { CHANGE_THEME } from '@constants/ActionsConstants';\r\n\r\nconst changeTheme = (theme) => ({\r\n  type: CHANGE_THEME,\r\n  theme,\r\n});\r\n\r\nexport default changeTheme;\r\n","import styled from 'styled-components';\r\nimport {\r\n  BTN_FONT_SIZE,\r\n  SETTINGS_BTN_WIDTH,\r\n  BTN_BORDER_RADIUS,\r\n  BORDER_SIZE_STYLE,\r\n  SETTINGS_BTN_HEIGHT,\r\n  TWENTY_PX_MARGIN,\r\n} from '@constants/StyleConstants';\r\nimport { BTN_BG_COLOR, MAIN_TEXT_COLOR, BTN_BORDER } from '@constants/Theme';\r\n\r\nexport const SwitcherWrapper = styled.div`\r\n  margin-bottom: ${TWENTY_PX_MARGIN};\r\n`;\r\n\r\nexport const Select = styled.select`\r\n  width: ${SETTINGS_BTN_WIDTH};\r\n  height: ${SETTINGS_BTN_HEIGHT};\r\n  background-color: ${BTN_BG_COLOR};\r\n  color: ${MAIN_TEXT_COLOR};\r\n  text-align: center;\r\n  font-size: ${BTN_FONT_SIZE};\r\n  border-radius: ${BTN_BORDER_RADIUS};\r\n  border: ${BORDER_SIZE_STYLE} ${BTN_BORDER};\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  color: ${MAIN_TEXT_COLOR};\r\n  font-size: 20px;\r\n`;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport changeTheme from '@store/actions/ThemeActions';\r\nimport { Select, SwitcherWrapper, Text } from './styles';\r\n\r\nfunction ThemeSwitcher() {\r\n  const dispatch = useDispatch();\r\n  const actualTheme = useSelector((store) => store.theme);\r\n\r\n  const changeSelect = (e) => {\r\n    dispatch(changeTheme(e.target.value));\r\n  };\r\n\r\n  const options = [\r\n    { value: 'dark', text: 'Dark Theme' },\r\n    { value: 'light', text: 'Light Theme' },\r\n  ];\r\n  return (\r\n    <SwitcherWrapper>\r\n      <Text>Switch Theme</Text>\r\n      <Select value={actualTheme} onChange={changeSelect} data-cy=\"theme-switcher\">\r\n        {options.map((opt) => (\r\n          <option value={opt.value} key={opt.value}>\r\n            {opt.text}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n    </SwitcherWrapper>\r\n  );\r\n}\r\n\r\nexport default ThemeSwitcher;\r\n","import styled from 'styled-components';\r\nimport {\r\n  SETTINGS_BTN_WIDTH,\r\n  SETTINGS_BTN_HEIGHT,\r\n  BORDER_SIZE_STYLE,\r\n  BTN_BORDER_RADIUS,\r\n  BTN_FONT_SIZE,\r\n} from '@constants/StyleConstants';\r\nimport { BTN_BORDER, BTN_BG_COLOR, BTN_BG_COLOR_HOVER } from '@constants/Theme';\r\n\r\nconst DeleteBtn = styled.div`\r\n  width: ${SETTINGS_BTN_WIDTH};\r\n  height: ${SETTINGS_BTN_HEIGHT};\r\n  text-align: center;\r\n  font-size: ${BTN_FONT_SIZE};\r\n  border-radius: ${BTN_BORDER_RADIUS};\r\n  border: ${BORDER_SIZE_STYLE} ${BTN_BORDER};\r\n  cursor: pointer;\r\n  background-color: ${BTN_BG_COLOR};\r\n  &:hover {\r\n    background-color: ${BTN_BG_COLOR_HOVER};\r\n  }\r\n`;\r\n\r\nexport default DeleteBtn;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { clearHistory, loadC } from '@store/actions/CalculatorActions';\r\nimport DeleteBtn from './styles';\r\n\r\nfunction ClearAllBtn() {\r\n  const dispatch = useDispatch();\r\n  const clickHandler = () => {\r\n    dispatch(clearHistory());\r\n    dispatch(loadC());\r\n  };\r\n\r\n  return (\r\n    <DeleteBtn onClick={clickHandler} data-cy=\"clear-all\">\r\n      Clear All\r\n    </DeleteBtn>\r\n  );\r\n}\r\n\r\nexport default ClearAllBtn;\r\n","import styled from 'styled-components';\r\nimport { SETTINGS_HEADER_SIZE, TWENTY_PX_MARGIN } from '@constants/StyleConstants';\r\n\r\nexport const PanelWrapper = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nexport const Heading = styled.h2`\r\n  margin: ${TWENTY_PX_MARGIN} 0;\r\n  font-size: ${SETTINGS_HEADER_SIZE};\r\n`;\r\n","import React from 'react';\r\nimport ThemeSwitcher from '@components/ThemeSwitcher/ThemeSwitcher';\r\nimport ClearAllBtn from '@components/ClearAllBtn/ClearAllBtn';\r\nimport { PanelWrapper, Heading } from './styles';\r\n\r\nfunction ControlPanel() {\r\n  return (\r\n    <PanelWrapper>\r\n      <Heading>Settings</Heading>\r\n      <ThemeSwitcher />\r\n      <ClearAllBtn />\r\n    </PanelWrapper>\r\n  );\r\n}\r\n\r\nexport default ControlPanel;\r\n","import React from 'react';\r\nimport ControlPanel from '@components/Settings/Settings';\r\n\r\nfunction Settings() {\r\n  return <ControlPanel />;\r\n}\r\n\r\nexport default Settings;\r\n","import { LOAD_BUTTON, LOAD_ANSWER, LOAD_C, LOAD_CE, ADD_TO_HISTORY, CLEAR_HISTORY } from '@constants/ActionsConstants';\r\n\r\nexport const loadButton = (num) => ({\r\n  type: LOAD_BUTTON,\r\n  payload: num,\r\n});\r\n\r\nexport const loadC = () => ({\r\n  type: LOAD_C,\r\n});\r\n\r\nexport const loadCE = () => ({\r\n  type: LOAD_CE,\r\n});\r\n\r\nexport const loadAnswer = (answer) => ({\r\n  type: LOAD_ANSWER,\r\n  payload: answer,\r\n});\r\n\r\nexport const addToHistory = (lastExpression, expressionWithResult) => ({\r\n  type: ADD_TO_HISTORY,\r\n  lastExpression,\r\n  expressionWithResult,\r\n});\r\n\r\nexport const clearHistory = () => ({\r\n  type: CLEAR_HISTORY,\r\n});\r\n"],"names":["theme","type","CHANGE_THEME","SwitcherWrapper","styled","TWENTY_PX_MARGIN","Select","SETTINGS_BTN_WIDTH","SETTINGS_BTN_HEIGHT","BTN_BG_COLOR","MAIN_TEXT_COLOR","BTN_FONT_SIZE","BTN_BORDER_RADIUS","BORDER_SIZE_STYLE","BTN_BORDER","Text","dispatch","useDispatch","actualTheme","useSelector","store","value","onChange","e","changeTheme","target","text","map","opt","BTN_BG_COLOR_HOVER","onClick","clearHistory","loadC","PanelWrapper","Heading","SETTINGS_HEADER_SIZE","loadButton","num","LOAD_BUTTON","payload","LOAD_C","loadCE","LOAD_CE","loadAnswer","answer","LOAD_ANSWER","addToHistory","lastExpression","expressionWithResult","ADD_TO_HISTORY","CLEAR_HISTORY"],"sourceRoot":""}